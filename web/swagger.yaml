openapi: 3.0.1
info:
  title: MTC Live API
  version: 1.0.0
servers:
  - url: https://api.danbel.ru:30/mtc-live/v1.0
    description: Generated server url
paths:
  /venues:
    get:
      tags:
        - venue-controller
      operationId: getAll
      parameters:
        - name: features
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - WHEELCHAIR
                - BLIND
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VenueDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
  /venues/search:
    get:
      tags:
        - venue-controller
      operationId: getAll_1
      parameters:
        - name: lat
          in: query
          description: Географическая широта центра круга поиска
          required: true
          schema:
            type: number
            format: double
        - name: long
          in: query
          description: Географическая долгота центра круга поиска
          required: true
          schema:
            type: number
            format: double
        - name: radios
          in: query
          description: Радиус круга поиска
          required: true
          schema:
            type: number
            format: double
        - name: features
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - WHEELCHAIR
                - BLIND
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VenueDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
  /events:
    get:
      tags:
        - event-controller
      operationId: getAll_2
      parameters:
        - name: venueId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum:
              - ACTUAL
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
  /events/{id}:
    get:
      tags:
        - event-controller
      operationId: getById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventDetailsDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionModel'
components:
  schemas:
    ExceptionModel:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
    VenueDto:
      required:
        - features
        - id
        - latitude
        - longitude
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        features:
          type: array
          items:
            type: string
            enum:
              - WHEELCHAIR
              - BLIND
    CategoryDto:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    EventDto:
      required:
        - categories
        - id
        - name
        - status
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        status:
          type: string
          enum:
            - ACTUAL
        image:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryDto'
    EventDetailsDto:
      required:
        - categories
        - description
        - id
        - images
        - name
        - persons
        - schedules
        - status
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - ACTUAL
        images:
          type: array
          items:
            type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryDto'
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/EventScheduleDto'
        persons:
          type: array
          items:
            $ref: '#/components/schemas/EventPersonDto'
    EventPersonDto:
      required:
        - person
        - post
      type: object
      properties:
        person:
          $ref: '#/components/schemas/PersonDto'
        post:
          $ref: '#/components/schemas/PersonPostDto'
    EventScheduleDto:
      required:
        - dateTime
        - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        dateTime:
          type: string
          format: date-time
    PersonDto:
      required:
        - firstName
        - id
        - lastName
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        photo:
          type: string
    PersonPostDto:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
